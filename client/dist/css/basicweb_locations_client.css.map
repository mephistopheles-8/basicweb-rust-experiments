{
  "version": 3,
  "file": "basicweb_locations_client.css",
  "sources": [
    "../../Leaflet.html"
  ],
  "sourcesContent": [
    "<script>\n    import { onMount } from 'svelte';\n    import Leaflet from \"leaflet\";\n\n    export const OpenStreetMap = \"OpenStreetMap\";\n    export const StamenToner   = \"StamenToner\";\n    export const NationalMap   = \"NationalMap\";\n\n    const L = Leaflet;\n\n    export let mapType = OpenStreetMap;\n\n    let mapElement;\n    let map;\n    let markers = [];\n\n    function openStreetMapSetup( map ) {\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n    }\n\n    function stamenTonerSetup( map ) {\n        var attribution \n            = `Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, `\n            + `under <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. `\n            + `Data by <a href=\"http://openstreetmap.org\">OpenStreetMap</a>, `\n            + `under <a href=\"http://www.openstreetmap.org/copyright\">ODbL</a>.`;\n\n        var tnmBasemapViewer = L.tileLayer(\n            'http://tile.stamen.com/toner/{z}/{x}/{y}.png', {\n                attribution: attribution\n                }).addTo(map);\n    }\n\n    function nationalMapSetup( map ) {\n       // Define the TNM Layers\n        var attribution \n            = `<a href=\"https://www.doi.gov\">U.S. Department of the Interior</a>` \n            + `| <a href=\"https://www.usgs.gov\">U.S. Geological Survey</a>`\n            + `| <a href=\"https://www.usgs.gov/laws/policies_notices.html\">Policies</a>`;\n\n\n        var tnmBasemapViewer = L.tileLayer(\n            'https://basemap.nationalmap.gov/ArcGIS/rest/services/USGSTopo/MapServer/tile/{z}/{y}/{x}', {\n                maxZoom: 14,\n                attribution: attribution\n                });\n\n        var tnmBasemapNavigator = L.tileLayer(\n            'https://navigator.er.usgs.gov/tiles/tcr.cgi/{z}/{x}/{y}.png', {\n                maxZoom: 20,\n                attribution: attribution\n                });\n\n        // Add overlays\n        var highways = L.tileLayer.wms(\n            \"https://services.nationalmap.gov/ArcGIS/services/transportation/MapServer/WMSServer?\", {\n            layers: '6',\n            format: 'image/png',\n            transparent: true,\n        });\n\n        // Add baselayers and overlays to groups\n        var baseLayers = {\n            \"The National Map (Viewer)\" : tnmBasemapViewer,\n            \"The National Map (Navigator)\" : tnmBasemapNavigator\n        };\n        var overlays = {\n            \"Highways\": highways\n        };\n        var controlLayers = L.control.layers(baseLayers, overlays);\n\n        // Add the main baselayer to the map as a default (so it loads when the map\n        // is loaded\n        tnmBasemapViewer.addTo(map);\n\n        // Add the layer selector control to the map\n        controlLayers.addTo(map);\n\n    } // end [nationalMapSetup]\n\n    export function getMap () {\n        return map;\n    }\n    \n    export function leaflet ( ) {\n        return L;\n    }\n    \n    export function icon ( opts ) {\n        return L.icon(opts);\n    }\n    \n    export function divIcon ( opts ) {\n        return L.divIcon(opts);\n    }\n    \n    export function getBounds() {\n        return map.getBounds();\n    }\n    \n    export function fitBounds( bounds, opts ) {\n        return map.fitBounds( bounds, opts );\n    }\n\n    export function zoomToLocation( latlng, zoom = 14 ) {\n        map.setView(latlng, zoom)\n    }\n\n    export function addMarker( latlng, opts ) {\n        let marker = L.marker(latlng,opts).addTo(map);\n        markers.push( marker );\n    }\n\n    export function clearMarkers() {\n        markers.forEach((m) => map.removeLayer(m) );\n    }\n\n\tonMount(() => {\n        map = L.map(mapElement).setView([35.513151077520035, -96.416015625], 3);\n        switch( mapType ) {\n        case OpenStreetMap:\n            openStreetMapSetup( map );\n            break;\n        case StamenToner:\n            stamenTonerSetup( map );\n            break;\n        case NationalMap:\n            nationalMapSetup( map );\n            break;\n        default: throw \"[Leaflet.onMount] Unknown map type\";\n        }\n\t});\n</script>\n<style>\n.map-container {\n    height: 300px;\n}\n</style>\n\n<div class=\"map-container\" bind:this={mapElement}></div>\n"
  ],
  "names": [],
  "mappings": "AAwIA,cAAc,cAAC,CAAC,AACZ,MAAM,CAAE,KAAK,AACjB,CAAC"
}