{
  "version": 3,
  "file": "basicweb_gallery_app_client.css",
  "sources": [
    "../../../client/Gallery.html",
    "../../../client/UserGallery.html",
    "../../../client/PostMarkdown.html",
    "../../../client/Tags.html"
  ],
  "sourcesContent": [
    "<script>\n    import { fade } from \"svelte/transition\";\n    import Lazy from \"svelte-lazy\";\n    export let galleryId;\n    const api = \"http://localhost:8080/api/v1\";\n\n    let galleryRequest;\n    let displayItem;\n\n    $: if (galleryId) {\n        galleryRequest = Promise.all([\n            fetch(`${api}/galleries/${galleryId}`)\n             .then(res => res.json())\n         ,  fetch(`${api}/galleries/${galleryId}/items`)\n             .then(res => res.json())\n            ]);\n        }\n\n    function showModal( item ) {\n        displayItem = item;\n    }\n    function hideModal() {\n        displayItem = null;\n    }\n</script>\n<style>\n    figure {\n         overflow: hidden;\n         margin:0;\n         cursor: pointer;\n    }\n    .card-image img {\n        margin: 0 auto;\n        display: block;\n        height: 400px;\n        width: 600px;\n        object-fit: cover;\n    }\n    .shadow-box {\n        position:fixed;\n        top:0;\n        bottom:0;\n        left:0;\n        right:0;\n        background: rgba(30,30,30,0.8);\n        padding: 50px;\n    }\n    .fullscreen-image {\n        width: 100%;\n        height: 100%;\n    }\n    .fullscreen-image img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n    .info-panel {\n        background: #000;\n        color: #FFF;\n    }\n    .gallery-img {\n        height:0;\n        padding-top: 56.25%;\n        background-repeat:no-repeat;\n        background-size:cover;\n        overflow:hidden;\n    }\n    .gallery-img-card {\n        width: 250px;\n    }\n    .gallery {\n        display: flex;\n        flex-wrap: wrap;\n    }\n</style>\n{#await galleryRequest}\n<p>...</p>\n{:then info}\n<h3>{info[0].name}</h3>\n{#if info[0].description}\n<p>{info[0].description}</p>\n{/if}\n<div class=\"gallery\">\n    {#each info[1] as item}\n        <figure class=\"card-image\" on:click={(e) => showModal(item[2])}>\n            <Lazy height={400}>\n                 <img alt={item[2].description} src=\"/assets/{item[2].uuid}\">\n            </Lazy>\n            <figcaption>{item[2].name}</figcaption>\n        </figure>\n    <!-- NOTE: still need to check compatibility of object-fit; otherwise we can use this -->\n    <!--\n    <div class=\"gallery-img-card\">\n        <div class=\"gallery-img\" style=\"background-image: url(/assets/{item[2].uuid});\"></div>\n        <p>{item[2].name}</p>\n    </div>\n    -->\n    {/each}\n</div>\n{:catch err}\n<p>Error: {err.message}</p>\n{/await}\n\n{#if displayItem}\n<div transition:fade=\"{{ duration: 200 }}\" class=\"shadow-box\" on:click={hideModal}>\n    <div class=\"fullscreen-image\">\n        <img src=\"/assets/{displayItem.uuid}\" alt=\"{displayItem.description}\">\n    </div>\n</div>\n{/if}\n",
    "<script>\n    import { fade } from \"svelte/transition\";\n    import Lazy from \"svelte-lazy\";\n    export let galleryId;\n    const api = \"http://localhost:8080/api/v1\";\n    \n    let galleryRequest;\n    let displayItem;\n\n    $: if (galleryId) {\n        galleryRequest = Promise.all([\n            fetch(`${api}/galleries/${galleryId}`)\n             .then(res => res.json())\n         ,  fetch(`${api}/galleries/${galleryId}/items`)\n             .then(res => res.json())\n            ]);\n        }\n\n    function showModal( item ) {\n        displayItem = item;\n    }\n\n    function hideModal() {\n        displayItem = null;\n    }\n</script>\n<style>\n    figure {\n         overflow: hidden;\n         margin:0;\n         cursor: pointer;\n    }\n    .card-image img {\n        margin: 0 auto;\n        display: block;\n        height: 200px;\n        width: 300px;\n        object-fit: cover;\n    }\n    .shadow-box {\n        position:fixed;\n        top:0;\n        bottom:0;\n        left:0;\n        right:0;\n        background: rgba(30,30,30,0.8);\n        padding: 50px;\n    }\n    .fullscreen-image {\n        width: 100%;\n        height: 100%;\n    }\n    .fullscreen-image img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n    .info-panel {\n        background: #000;\n        color: #FFF;\n    }\n    .gallery-img {\n        height:0;\n        padding-top: 56.25%;\n        background-repeat:no-repeat;\n        background-size:cover;\n        overflow:hidden;\n    }\n    .gallery-img-card {\n        width: 250px;\n    }\n    .gallery {\n        display: flex;\n        flex-wrap: wrap;\n    }\n</style>\n{#await galleryRequest}\n<p>...</p>\n{:then info}\n<h3>{info[0][1].name}</h3>\n{#if info[0][1].description}\n<p>{info[0][1].description}</p>\n{/if}\n<div class=\"gallery\">\n    {#each info[1] as item}\n        <figure class=\"card-image\" on:click={(e) => showModal(item[2])}>\n            <Lazy height={200}>\n                 <img alt={item[2].description} src=\"/user/assets/{item[2].uuid}\">\n            </Lazy>\n            <figcaption>{item[2].name}</figcaption>\n        </figure>\n    {/each}\n</div>\n{:catch err}\n<p>Error: {err.message}</p>\n{/await}\n\n{#if displayItem}\n<div transition:fade=\"{{ duration: 200 }}\" class=\"shadow-box\" on:click={hideModal}>\n    <div class=\"fullscreen-image\">\n        <img src=\"/user/assets/{displayItem.uuid}\" alt=\"{displayItem.description}\">\n    </div>\n</div>\n{/if}\n",
    "<script>\n    import commonmark from \"commonmark\";\n    export let postId;\n    export let title = \"\";\n    export let description = \"\";\n    export let body = \"\";\n\n    const api = \"http://localhost:8080/api/v1\";\n\n    let postRequest = Promise.resolve(true);\n    let saveRequest;\n    let rendered = \"\";\n    let timer;\n    \n    const reader = new commonmark.Parser({smart: true});\n    const writer = new commonmark.HtmlRenderer({safe: true});\n\n    $: if (postId && !saveRequest) {\n        postRequest \n            = fetch(`${api}/posts/${postId}`)\n            . then( res => res.json() )\n            . then( res => {\n                title = res.title;\n                description = res.description;\n                body = res.body;\n                saveRequest = Promise.resolve(res);\n                return res;\n            });\n    }\n\n    $: {\n        if( timer ) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout( () => {\n            let parsed = reader.parse( body );\n            rendered = writer.render( parsed );\n        }, 250);\n    }\n\n    function savePost () {\n        if( title && description && body) {\n            let endpoint \n                = `${api}/posts`\n                + (postId ? `/${postId}` : \"\");\n\n            saveRequest\n                = fetch(endpoint,{\n                        method : \"POST\"\n                     ,  headers : {\n                            \"Content-Type\" : \"application/json\"\n                       }\n                     , credentials: \"same-origin\"\n                     , body : JSON.stringify({\n                           title\n                         , description\n                         , body\n                         , format : 1\n                        }) \n                 })\n                . then(res => res.json())\n                . then(res => {\n                        if( !postId ) \n                            postId = res.id;\n                        return res; \n                  });\n        }\n    }\n\n</script>\n<style>\n    label {\n        display: block;\n    }\n    textarea {\n        resize: none;\n    }\n    .editor {\n        height: 350px;\n        display: flex;\n    }\n    .editor > * {\n        flex-grow: 1;\n        width: 50%;\n        max-height: 100%;\n        overflow: auto;\n    }\n    .preview {\n        padding: 1rem;\n    }\n</style>\n\n{#await postRequest}\n<p>...</p>\n{:then}\n<label>Title <input bind:value={title} type=\"text\"></label>\n<label>Description <input bind:value={description} type=\"text\"></label>\n<label>Body</label>\n<div class=\"editor\">\n    <textarea bind:value={body}></textarea>\n    <div class=\"preview\">{@html rendered}</div>\n</div>\n<button on:click={savePost}>Save</button>\n{#if saveRequest}\n{#await saveRequest}\n<p>Saving...</p>\n{:then p}\n<p>Saved: {p.updated}</p>\n{:catch err}\n<p>Error: {err.message}</p>\n{/await}\n{/if}\n{:catch err}\n<p>Error: {err.message}</p>\n{/await}\n",
    "<script>\n    export let tags = [];\n    let value = \"\";\n\n    function clearTag(ind) {\n        tags.splice(ind,1);\n        tags = tags;\n    }\n    function keyHandler(e) {\n        let trimmed = value.trim();\n        // Confirm a tag on enter or comma\n        if( trimmed.length > 0 && (e.keyCode === 13 || e.key === \",\") ){\n            tags.push(trimmed);\n            value = \"\";\n            tags = tags;\n            e.preventDefault();\n\n        // Delete a tag with backspace\n        }else if (e.keyCode === 8 && value.length === 0){\n            tags.pop();\n            tags = tags;\n\n        // Make commas invalid from within tags\n        }else if ( e.key === \",\" ){\n            e.preventDefault();\n        }\n    }\n</script>\n<style>\n    .tags-editor {\n        border: solid 1px #ccc; \n    }\n    input {\n        -moz-appearance:none;\n        -webkit-appearance:none;\n        appearance:none;\n        border-style: none;\n        box-sizing: border-box;\n        padding: 0.5em;\n        flex-grow: 1;\n    }\n    .tags-editor, ul {\n        display: flex;\n    }\n    ul {\n        list-style-type: none;\n        margin: 0; padding: 0;\n    }\n    li {\n        background: #ddd;\n        margin: 0.1em;\n        padding: 0.3em;\n        transition: background 0.5s;\n        border-radius:0.4em;\n        cursor: pointer;\n    }\n    li:hover {\n        background: #efefef;\n    }\n</style>\n<div class=\"tags-editor\">\n    <ul class=\"tags-listing\">\n        {#each tags as tag,i}\n        <li on:click={(e) => clearTag(i)}>{tag}</li>\n        {/each}\n    </ul>\n    <input bind:value={value} on:keydown={keyHandler} type=\"text\">\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}